name: 🚀 Deploy workflow on test environment

on:
  push:
    branches: ['release/v**', 'release']

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 복사
      - name: check out the repo
        uses: actions/checkout@v4

      - name: Create .env.dev file
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:h2:mem:testdb" >> .env.dev
          echo "SPRING_DATASOURCE_USERNAME=" >> .env.dev
          echo "SPRING_DATASOURCE_PASSWORD=" >> .env.dev
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.dev
          echo "JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}" >> .env.dev
          echo "JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}" >> .env.dev
          echo "JWT_ACCESS_HEADER=${{ secrets.JWT_ACCESS_HEADER }}" >> .env.dev
          echo "JWT_REFRESH_HEADER=${{ secrets.JWT_REFRESH_HEADER }}" >> .env.dev
          echo "SPRING_DATA_REDIS_HOST=${{ secrets.SPRING_DATA_REDIS_HOST }}" >> .env.dev
          echo "SPRING_DATA_REDIS_PORT=${{ secrets.SPRING_DATA_REDIS_PORT }}" >> .env.dev
          echo "SPRING_DATA_REDIS_USERNAME=${{ secrets.SPRING_DATA_REDIS_USERNAME }}" >> .env.dev
          echo "SPRING_DATA_REDIS_PASSWORD=${{ secrets.SPRING_DATA_REDIS_PASSWORD }}" >> .env.dev
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env.dev

      - name: Create .env.prod file
        run: |
          echo "SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}" >> .env.prod
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}" >> .env.prod
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}" >> .env.prod
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.prod
          echo "JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}" >> .env.prod
          echo "JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}" >> .env.prod
          echo "JWT_ACCESS_HEADER=${{ secrets.JWT_ACCESS_HEADER }}" >> .env.prod
          echo "JWT_REFRESH_HEADER=${{ secrets.JWT_REFRESH_HEADER }}" >> .env.prod
          echo "SPRING_DATA_REDIS_HOST=${{ secrets.SPRING_DATA_REDIS_HOST }}" >> .env.prod
          echo "SPRING_DATA_REDIS_PORT=${{ secrets.SPRING_DATA_REDIS_PORT }}" >> .env.prod
          echo "SPRING_DATA_REDIS_USERNAME=${{ secrets.SPRING_DATA_REDIS_USERNAME }}" >> .env.prod
          echo "SPRING_DATA_REDIS_PASSWORD=${{ secrets.SPRING_DATA_REDIS_PASSWORD }}" >> .env.prod
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env.dev

      # 도커 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sikyozo:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/sikyozo:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/sikyozo:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/sikyozo:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/sikyozo:latest 

      # AWS 자격 증명
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      # 배포 시작
      - name: 🚀 Deploy to EC2 with CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name sikyozoDeploy \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name sikyozoTestDeploy \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} 
